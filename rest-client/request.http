@baseUrl = http://localhost:3000
@jwtToken = {{authLogin.response.body.accessToken}}

### Auth Login
# @name authLogin
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "user@email.com",
  "password": "123456"
}

### Create user
# @name createUser
POST {{baseUrl}}/user
Content-Type: application/json

{
  "username": "reader",
  "email": "reader@email.com",
  "password": "123456",
  "avatarUrl": "urldaimagem"
}

### Get one user
# @name getUserByToken
GET {{baseUrl}}/user/profile
Authorization: Bearer {{jwtToken}}

### Create Story
# @name createStory
POST {{baseUrl}}/story
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "title": "Hobbits resolve",
  "coverUrl": "https://example.com/covers/hobbbit-resolve.jpg",
  "storyType": "fanfic",
  "synopsis": "here are the synopsis od the story",
  "tags": ["romanece", "aventura"],
  "mainGenre": "fantasy",
  "language": "english"
}

### Find One Story by slug
# @name findStoryBySlug
GET {{baseUrl}}/story/Hobbits-resolve-9gzhc0

### Find All Stories with pagination and filtering
# @name findAllStoriesPaginatedAndFiltered
GET {{baseUrl}}/story?page=1&limit=2&storyType=fanfic&&sortOrder=ASC

### Find All Stories with pagination
# @name findAllStoriesPaginated
GET {{baseUrl}}/story?page=1&limit=2

### Update Story
# @name updateStory
PATCH {{baseUrl}}/story/5cdd27a8-9820-44a3-aa45-2164121cb543
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "title": "Hobbits resolve 1",
  "synopsis": "here are the synopsis od the story"
}

### Delete Story
DELETE {{baseUrl}}/story/05350656-0bf1-4175-85f4-59c9aa1c68a9
Authorization: Bearer {{jwtToken}}

### Get user stories
# @name getUserStories
GET {{baseUrl}}/story/me
Authorization: Bearer {{jwtToken}}

### Create Volume
# @name createVolume
POST {{baseUrl}}/volume/create/29f4b3f8-ba63-4273-a3e6-940fa7a02d69
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "title": "So far away 1",
  "description": "Here is the description of volume 1"
}

### Update Volume
PATCH  {{baseUrl}}/volume/fde43722-2a18-44e4-b26d-900d10949f9c
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "description": "Here is the description of volume 1"
}

### Get Volume by Id
# @name getVolumeById
GET {{baseUrl}}/volume/fde43722-2a18-44e4-b26d-900d10949f9c
Authorization: Bearer {{jwtToken}}

### Get Volumes by Story
# @name getVolumesByStory
GET {{baseUrl}}/volume/all/5cdd27a8-9820-44a3-aa45-2164121cb543
Authorization: Bearer {{jwtToken}}

### Get Volumes with Chapters by Story
# @name getVolumesWithChaptersByStory
GET {{baseUrl}}/volume/all-with-chapters/7be69342-86f7-4b79-8012-f2f29b3078e5
Authorization: Bearer {{jwtToken}}

### Delete Volume
# @name deleteVolume
DELETE {{baseUrl}}/volume/db69f898-5396-4cd1-962e-1d2be8626254
Authorization: Bearer {{jwtToken}}

### Create Chapter
# @name createChapter
POST {{baseUrl}}/chapter/create/493bdc56-e79b-4145-a833-6b5b99717cef
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
   "title": "The journey 6",
   "content": "Here is the content of chapter 6",
   "isDraft": true
}

### Get Chapters by Volume OBS
# @name getChaptersByVolume
GET {{baseUrl}}/chapter/volume/493bdc56-e79b-4145-a833-6b5b99717cef
Authorization: Bearer {{jwtToken}}

### Get Chapter by Id
# @name getChapterById
GET {{baseUrl}}/chapter/4d304ef8-b61e-4a0c-9e05-c626972ee951
Authorization: Bearer {{jwtToken}}

### Reorder chapter
PATCH {{baseUrl}}/chapter/53579d21-0534-4f91-ba9d-2854874530aa/reorder
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "beforeChapterId": "5b6ee670-fa2b-4230-9816-d34c7493f570",
  "afterChapterId": "820192a6-ae48-4c78-a3b1-1132c5c451fe"
}


### Update Chapter
PATCH {{baseUrl}}/chapter/546d5f5a-c81a-40d8-a7b2-d816c1fbf666
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "content": "Here is the updated content of chapter 1 updated"
}

### Delete Chapter
DELETE {{baseUrl}}/chapter/f4bfea94-9845-434b-9b41-b20b78c71c78
Authorization: Bearer {{jwtToken}}

### Create Announcement (Publisher)
# @name createAnnouncement
POST {{baseUrl}}/announcement
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "title": "quatorze anúncio",
  "image": "https://example.com/image.jpg",
  "content": "Conteúdo do anúncio."
}

### Announcement - Buscar por id (Pública)
# @name getAnnouncementById
GET {{baseUrl}}/announcement/03a396c5-6a4b-491a-9fa6-0556bcc2a5e9

### Announcement - Buscar todos ativos (Pública)
# @name getActiveAnnouncements
GET {{baseUrl}}/announcement

### Announcement - Buscar todos (Publisher) 
# @name getAllAnnouncements
GET {{baseUrl}}/announcement/all?page=2&limit=5
Authorization: Bearer {{jwtToken}}

### Announcement - Atualizar (Publisher)
# @name updateAnnouncement
PATCH {{baseUrl}}/announcement/c8765f66-fb9f-4465-8477-b78e9f5e3168
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "isActive": true
}

### Announcement - Deletar (Publisher)
# @name deleteAnnouncement
DELETE {{baseUrl}}/announcement/74d7a246-c9f7-48b8-9ada-a1710b1b8483
Authorization: Bearer {{jwtToken}}


### Create Highlight
# @name createHighlight
POST {{baseUrl}}/highlight
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "title": "Highlight Title 7",
  "banner": "https://example.com/banner.jpg",
  "link": "https://example.com"
}

### Get all Highlights (Public)
# @name getAllHighlights
GET {{baseUrl}}/highlight
Authorization: Bearer {{jwtToken}}

### Get Highlight by Id (Public)
# @name getHighlightById
GET {{baseUrl}}/highlight/d32976a2-db29-4c53-8115-0420aeeb0a9a
Authorization: Bearer {{jwtToken}}

### Get all Highlights (Publisher)
# @name getAllHighlightsPublisher
GET {{baseUrl}}/highlight/all
Authorization: Bearer {{jwtToken}}

### Update Highlight (Publisher)
# @name updateHighlight
PATCH {{baseUrl}}/highlight/d32976a2-db29-4c53-8115-0420aeeb0a9a
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "isActive": true
}

### Delete Highlight
# @name deleteHighlight
DELETE {{baseUrl}}/highlight/aa6ecd26-195d-41ee-9719-ed4e2dcecbca
Authorization: Bearer {{jwtToken}}

### Progresso de leitura
# @name readingProgress
PATCH {{baseUrl}}/reading-progress
Content-Type: application/json
Authorization: Bearer {{jwtToken}}

{
  "storyId": "29f4b3f8-ba63-4273-a3e6-940fa7a02d69",
  "chapterId": "c0be1f30-08e9-4f35-951f-577ba4237b4f"
}