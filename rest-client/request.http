@baseUrl = http://localhost:3000
@jwtToken = {{authLogin.response.body.accessToken}}

### Auth Login
# @name authLogin
POST {{baseUrl}}/auth/login
Content-Type: application/json

{
  "email": "user@email.com",
  "password": "123456"
}

### Create user
# @name createUser
POST {{baseUrl}}/user
Content-Type: application/json

{
  "username": "user",
  "email": "user@email.com",
  "password": "123456",
  "avatarUrl": "urldaimagem"
}

### Get one user
# @name getUserByToken
GET {{baseUrl}}/user/profile
Authorization: Bearer {{jwtToken}}

### Create Story
# @name createStory
POST {{baseUrl}}/story
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "title": "Hobbits resolve",
  "coverUrl": "https://example.com/covers/hobbbit-resolve.jpg",
  "storyType": "fanfic",
  "synopsis": "here are the synopsis od the story",
  "tags": ["romanece", "aventura"],
  "mainGenre": "fantasy",
  "language": "english"
}

### Find One Story by slug
# @name findStoryBySlug
GET {{baseUrl}}/story/Hobbits-resolve-9gzhc0

### Find All Stories with pagination and filtering
# @name findAllStories
GET {{baseUrl}}/story?page=1&limit=2&storyType=fanfic&&sortOrder=ASC

### Update Story
# @name updateStory
PATCH {{baseUrl}}/story/5cdd27a8-9820-44a3-aa45-2164121cb543
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "title": "Hobbits resolve 2",
  "synopsis": "here are the synopsis od the story"
}

### Delete Story
DELETE {{baseUrl}}/story/38273e0d-e095-4fa6-b91e-42fe8af5a2b9
Authorization: Bearer {{jwtToken}}

### Get user stories
# @name getUserStories
GET {{baseUrl}}/story/me
Authorization: Bearer {{jwtToken}}

### Create Volume
# @name createVolume
POST {{baseUrl}}/volume/create/05350656-0bf1-4175-85f4-59c9aa1c68a9
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "title": "So far away",
  "description": "Here is the description of volume 1",
  "position": 1
}

### Update Volume
PATCH  {{baseUrl}}/volume/fde43722-2a18-44e4-b26d-900d10949f9c
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "description": "Here is the description of volume 1"
}

### Get Volume by Id
# @name getVolumeById
GET {{baseUrl}}/volume/fde43722-2a18-44e4-b26d-900d10949f9c
Authorization: Bearer {{jwtToken}}

### Get Volumes by Story
# @name getVolumesByStory
GET {{baseUrl}}/volume/all/5cdd27a8-9820-44a3-aa45-2164121cb543
Authorization: Bearer {{jwtToken}}

### Get Volumes with Chapters by Story
# @name getVolumesWithChaptersByStory
GET {{baseUrl}}/volume/all-with-chapters/7be69342-86f7-4b79-8012-f2f29b3078e5
Authorization: Bearer {{jwtToken}}

### Create Chapter
# @name createChapter
POST {{baseUrl}}/chapter/create/db69f898-5396-4cd1-962e-1d2be8626254
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
   "title": "Chapter 5 - The journey",
   "content": "Here is the content of chapter 5",
   "isDraft": false
}

### Get Chapters by Volume OBS: tirar da reposta o volume que vem com os chapters
# @name getChaptersByVolume
GET {{baseUrl}}/chapter/volume/db69f898-5396-4cd1-962e-1d2be8626254
Authorization: Bearer {{jwtToken}}

### Get Chapter by Id
# @name getChapterById
GET {{baseUrl}}/chapter/1
Authorization: Bearer {{jwtToken}}

### Reorder chapter
PATCH {{baseUrl}}/chapter/53579d21-0534-4f91-ba9d-2854874530aa/reorder
Authorization: Bearer {{jwtToken}}
Content-Type: application/json

{
  "beforeChapterId": "5b6ee670-fa2b-4230-9816-d34c7493f570",
  "afterChapterId": "820192a6-ae48-4c78-a3b1-1132c5c451fe"
}